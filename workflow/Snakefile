 #! /usr/bin/env python
# -*- coding: utf-8 -*-

# Setup

from __future__ import (absolute_import, division,
                        print_function, unicode_literals)
from builtins import *

import re
import gzip
from collections import defaultdict

from snakemake.utils import min_version

min_version("6.4.1")

from snakemake.exceptions import RuleException


# Set up sample wildcards
wildcard_constraints:
    caseid = 'TCGA-[0-9A-Z]{2}-[0-9A-Z]{4}',
    sampid = 'TCGA-[0-9A-Z]{2}-[0-9A-Z]{4}-\d{2}[A-Z]',
    uuid = '[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}'

configfile: "config/config.yaml"

# Parse metadata
METADATA = {}
tsv = (l.strip('\n').split('\t') for l in open(config['sample_tsv'], 'r'))
header = next(tsv)
for row in tsv:
    d = dict(zip(header, row))
    METADATA[d['sample']] = d

# Create filtered metadata file with pilot data

PILOT = {sample: data for sample, data in METADATA.items() if data.get('pilot') == 'True'}

# Run for ALL samples
rule all:
    input:


# Rules to include
include: "rules/references.smk"
include: "rules/gdc_download.smk"
include: "rules/bam_to_fastq.smk"
include: "rules/star_index_gdc38_gencode38.smk"
include: "rules/starsolo_alignment_gdc.smk"
include: "rules/sc_telescope.smk"
